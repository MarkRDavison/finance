@inherits ComponentWithState

<div>
    <TextInput 
        Id="add-account-form-name"
        Label="Name" 
        IsLabelDisplay="true"
        Width="100%"
        @bind-Value="ViewModel.Name"/>
    <TextInput 
        Id="add-account-form-account-number"
        Label="Account Number" 
        IsLabelDisplay="true"
        Width="100%"
        @bind-Value="ViewModel.AccountNumber"/>
    <DropdownList
        TId="Guid"
        Id="add-account-form-bank"
        Label="Bank" 
        IsLabelDisplay="true"
        Width="100%"
        Placeholder="Select bank"
        Items="@ViewModel.LookupState.Instance.BankItems"
        @bind-Value="ViewModel.BankId"/>
    <DropdownList
        TId="Guid"
        Id="add-account-form-account-type"
        Label="Account type" 
        IsLabelDisplay="true"
        Width="100%"
        Placeholder="Select account type"
        Items="@ViewModel.LookupState.Instance.AccountTypeItems"
        @bind-Value="ViewModel.AccountTypeId"/>
    <DropdownList
        TId="Guid"
        Id="add-account-form-currency"
        Label="Currency" 
        IsLabelDisplay="true"
        Width="100%"
        Placeholder="Select currency"
        Items="@ViewModel.LookupState.Instance.CurrencyItems"
        @bind-Value="ViewModel.CurrencyId"/>
    <CurrencyInput
        Id="add-account-form-virtual-balance"
        Label="Virtual balance" 
        IsLabelDisplay="true"
        Width="100%"
        CurrencyInfo="@_selectedCurrency"
        @bind-Value="@ViewModel.VirtualBalance"/>
</div>

@code {

    private CurrencyInfo? _selectedCurrency => ViewModel.LookupState.Instance.Currencies.Where(_ => _.Id == ViewModel.CurrencyId).Select(_ => new CurrencyInfo(_.Symbol, _.DecimalPlaces)).FirstOrDefault();

    [Parameter, EditorRequired]
    public AddAccountFormViewModel ViewModel { get; set; } = default!;

    protected override void OnInitialized()
    {
        ViewModel.LookupState = GetState<LookupState>();
        base.OnInitialized();
    }

}