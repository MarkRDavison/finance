<div class="z-date-context">
    <div class="z-date-context-item unselectable" onclick="@(async () => await Clicked())">
        1st to 31st
    </div>
    <div class="z-date-context-item unselectable" onclick="@(async () => await Clicked())">
        Previous
    </div>
    <div class="z-date-context-item unselectable" onclick="@(async () => await Clicked())">
        Next
    </div>
    <div class="z-date-context-item unselectable" onclick="@(async () => await Clicked())">
        Last seven days
    </div>
    <div class="z-date-context-item unselectable" onclick="@(async () => await Clicked())">
        Last thirty days
    </div>
    <div class="z-date-context-item unselectable" onclick="@(async () => await Clicked())">
        year to date
    </div>
    <div class="z-date-context-item unselectable" onclick="@(async () => await Clicked())">
        everything
    </div>
    <div class="z-date-context-item unselectable" onclick="@(async () => await Clicked())">
        custom
    </div>
</div>

@code {

    [Inject]
    public required IDateService DateService { get; set; }

    [Inject]
    public required IAppContextService AppContextService { get; set; }

    [Parameter]
    public EventCallback<bool> IsOpenChanged { get; set; }

    private async Task Clicked()
    {
        await IsOpenChanged.InvokeAsync(false);
    }

}
