@attribute [Route(Routes.Tags)]
@inherits ComponentWithState
@inject IStateHelper _stateHelper

<div class="container">
    <h1 style="display: inline-block;">Tags</h1>
    <Button CssClass="float-end"
            Variant="ButtonVariant.Outlined"
            Type="ButtonType.Primary"
            IconStyle="IconStyle.IconOnly"
            Icon="plus-lg"
            OnClick="@OpenAddTagModal" />
    <div class="container">
        <Table TRow="TagListItemViewModel"
               TKey="Guid"
               PagingEnabled="true"
               Rows="@_rows"
               ColumnDefinitions="@_columns" />
    </div>
</div>
<AddTagModal @bind-IsOpen="AddTagModalOpen" />


@code {

    private bool AddTagModalOpen { get; set; }
    private IStateInstance<TagListState> _tagListState { get; set; } = default!;

    private IEnumerable<TableColumDefinition<TagListItemViewModel>> _columns { get; set; } = default!;
    private IEnumerable<TagListItemViewModel> _rows => _tagListState.Instance.Tags.Select(_ => new TagListItemViewModel
        {
            Id = _.Id,
            MinDate = _.MinDate,
            MaxDate = _.MaxDate,
            Name = new LinkDefinition
            {
                Text = _.Name,
                Href = RouteHelpers.Tag(_.Id)
            }
        });

    protected override async Task OnInitializedAsync()
    {
        _columns = new List<TableColumDefinition<TagListItemViewModel>> {
            new(){ Title = "Name", Field = nameof(TagListItemViewModel.Name), Type = TableCellType.Link, Align = Alignment.Left }
            // TODO: Implement valid tag ranges
            //new(){ Title = "Start", Field = nameof(TagListItemViewModel.MinDate), Type = TableCellType.DateOnly},
            //new(){ Title = "End", Field = nameof(TagListItemViewModel.MaxDate), Type = TableCellType.DateOnly}
        };
        _tagListState = GetState<TagListState>();
        await EnsureStateLoaded();
    }

    protected override async Task OnParametersSetAsync()
    {
        await EnsureStateLoaded();
    }

    private async Task EnsureStateLoaded()
    {
        await _stateHelper.FetchTagList();
    }

    private void OpenAddTagModal()
    {
        AddTagModalOpen = true;
    }

}