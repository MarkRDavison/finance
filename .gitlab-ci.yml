variables:
  GIT_STRATEGY: clone
  GIT_SUBMODULE_STRATEGY: recursive
  GIT_DEPTH: '10'
  APP_NAME: zeno-finance
  IMAGE_TAG: latest

stages:
  - configure
  - build
  - package
  - test
  - deploy

configure tags:
  stage: configure
  image: python:3
  rules:
    - when: always
  artifacts:
    expire_in: "1h"
    paths:
      - variables
    when: always
  script:
    - pip install requests
    - WEB_HASH=$(python3 ./cicd/Image/determinetagfrompath.py -m ./src/web/ -m ./src/shared/ -m ./src/common/)
    - BFF_HASH=$(python3 ./cicd/Image/determinetagfrompath.py -m ./src/bff/ -m ./src/shared/ -m ./src/common/)
    - API_HASH=$(python3 ./cicd/Image/determinetagfrompath.py -m ./src/api/ -m ./src/shared/ -m ./src/common/)
    - E2E_HASH=$(python3 ./cicd/Image/determinetagfrompath.py -m ./src/e2e/ -m ./src/shared/ -m ./src/common/)
    - WEB_BUILD=$(python3 ./cicd/Image/determinetagpresent.py --branch "${CI_COMMIT_BRANCH}" --imagetag "${WEB_HASH}" --imagename zeno-finance-web --crusername "${CR_USERNAME}")
    - BFF_BUILD=$(python3 ./cicd/Image/determinetagpresent.py --branch "${CI_COMMIT_BRANCH}" --imagetag "${BFF_HASH}" --imagename zeno-finance-bff --crusername "${CR_USERNAME}")
    - API_BUILD=$(python3 ./cicd/Image/determinetagpresent.py --branch "${CI_COMMIT_BRANCH}" --imagetag "${API_HASH}" --imagename zeno-finance-api --crusername "${CR_USERNAME}")
    - E2E_BUILD=$(python3 ./cicd/Image/determinetagpresent.py --branch "${CI_COMMIT_BRANCH}" --imagetag "${E2E_HASH}" --imagename zeno-finance-e2e --crusername "${CR_USERNAME}")
    - mkdir -p variables
    - echo $WEB_HASH >> variables/web_image_tag
    - echo $BFF_HASH >> variables/bff_image_tag
    - echo $API_HASH >> variables/api_image_tag
    - echo $E2E_HASH >> variables/e2e_image_tag
    - echo $WEB_BUILD >> variables/web_image_build
    - echo $BFF_BUILD >> variables/bff_image_build
    - echo $API_BUILD >> variables/api_image_build
    - echo $E2E_BUILD >> variables/e2e_image_build
    - cat variables/web_image_tag
    - cat variables/bff_image_tag
    - cat variables/api_image_tag
    - cat variables/e2e_image_tag
    - cat variables/web_image_build
    - cat variables/bff_image_build
    - cat variables/api_image_build
    - cat variables/e2e_image_build

build:
  stage: build
  image: mcr.microsoft.com/dotnet/sdk:6.0
  needs:
    - job: "configure tags"
  script:
    - cd src
    - dotnet restore
    - dotnet build
    - dotnet test --filter "TestCategory!=UI&TestCategory!=Integration" --test-adapter-path:. --collect:"XPlat Code Coverage" --results-directory:"artifacts" --logger:"junit;LogFilePath=..\artifacts\{assembly}-test-result.xml;MethodFormat=Class;FailureBodyFormat=Verbose"
  artifacts:
    when: always
    reports:
      cobertura:
       - ./**/coverage.cobertura.xml
      junit: 
       - ./**/*test-result.xml
       
publish api:
  stage: package
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  needs:
    - job: "build"
      optional: true
    - job: "configure tags"
      optional: false
  artifacts:
    expire_in: "1h"
    paths:
      - variables
    when: always
  script:
    - cat variables/api_image_build
    - export API_IMAGE_TAG=`cat variables/api_image_build 2> /dev/null`
    - if [ "$API_IMAGE_TAG" == '' ]; then exit 0; fi
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CR_REGISTRY\":{\"auth\":\"$(echo -n ${CR_USERNAME}:${CR_PASSWORD} | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context ./src/ --dockerfile ./api.Dockerfile --destination "$CR_USERNAME"/zeno-finance-api:$API_IMAGE_TAG --force

publish bff:
  stage: package
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  needs:
    - job: "build"
      optional: true
    - job: "configure tags"
      optional: false
  artifacts:
    expire_in: "1h"
    paths:
      - variables
    when: always
  script:
    - cat variables/bff_image_build
    - export BFF_IMAGE_TAG=`cat variables/bff_image_build 2> /dev/null`
    - if [ "$BFF_IMAGE_TAG" == '' ]; then exit 0; fi
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CR_REGISTRY\":{\"auth\":\"$(echo -n ${CR_USERNAME}:${CR_PASSWORD} | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context ./src/ --dockerfile ./bff.Dockerfile --destination "$CR_USERNAME"/zeno-finance-bff:$BFF_IMAGE_TAG --force

publish web:
  stage: package
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  needs:
    - job: "build"
      optional: true
    - job: "configure tags"
      optional: false
  artifacts:
    expire_in: "1h"
    paths:
      - variables
    when: always
  script:
    - cat variables/web_image_build
    - export WEB_IMAGE_TAG=`cat variables/web_image_build 2> /dev/null`
    - if [ "$WEB_IMAGE_TAG" == '' ]; then exit 0; fi
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CR_REGISTRY\":{\"auth\":\"$(echo -n ${CR_USERNAME}:${CR_PASSWORD} | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context ./src/ --dockerfile ./web.Dockerfile --destination "$CR_USERNAME"/zeno-finance-web:$WEB_IMAGE_TAG --force

publish e2e:
  stage: package
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  needs:
    - job: "build"
      optional: true
    - job: "configure tags"
      optional: false
  artifacts:
    expire_in: "1h"
    paths:
      - variables
    when: always
  script:
    - cat variables/e2e_image_build
    - export E2E_IMAGE_TAG=`cat variables/e2e_image_build 2> /dev/null`
    - if [ "$E2E_IMAGE_TAG" == '' ]; then exit 0; fi
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CR_REGISTRY\":{\"auth\":\"$(echo -n ${CR_USERNAME}:${CR_PASSWORD} | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context ./src/ --dockerfile ./e2e.Dockerfile --destination "$CR_USERNAME"/zeno-finance-e2e:$E2E_IMAGE_TAG --force
    
end to end tests:
 stage: test
 image:
   name: dtzar/helm-kubectl
   entrypoint: [""]
 needs:
   - job: "publish e2e"
     optional: true
     artifacts: true
   - job: "publish web"
     optional: true
     artifacts: true
   - job: "publish bff"
     optional: true
     artifacts: true
   - job: "publish api"
     optional: true
     artifacts: true
   - job: "configure tags"
     optional: false
     artifacts: true
 artifacts:
   expire_in: "1h"
 script:
   - cat variables/web_image_tag
   - cat variables/bff_image_tag
   - cat variables/api_image_tag
   - cat variables/e2e_image_tag
   - cat variables/web_image_build
   - cat variables/bff_image_build
   - cat variables/api_image_build
   - cat variables/e2e_image_build
   - export WEB_IMAGE_TAG=`cat variables/web_image_build 2> /dev/null || echo latest`
   - export BFF_IMAGE_TAG=`cat variables/bff_image_build 2> /dev/null || echo latest`
   - export API_IMAGE_TAG=`cat variables/api_image_build 2> /dev/null || echo latest`
   - export E2E_IMAGE_TAG=`cat variables/e2e_image_build 2> /dev/null || echo latest`
   - echo $WEB_IMAGE_TAG
   - echo $BFF_IMAGE_TAG
   - echo $API_IMAGE_TAG
   - echo $E2E_IMAGE_TAG
   - envsubst < ./src/e2e/e2e-dep.yaml | tee ./src/e2e/dep-subst.yaml
   - kubectl delete namespace ${APP_NAME}-dev --ignore-not-found=true --kubeconfig "$KUBE_CONFIG"
   - kubectl create namespace ${APP_NAME}-dev --kubeconfig "$KUBE_CONFIG"
   - kubectl apply -f ./src/e2e/zeno-finance-dev-secret.yaml -n ${APP_NAME}-dev --kubeconfig "$KUBE_CONFIG"
   - helm upgrade ${APP_NAME} ./charts --install --atomic --values ./charts/dev-values.yaml --set api.tag="$API_IMAGE_TAG" --set bff.tag="$BFF_IMAGE_TAG" --set web.tag="$WEB_IMAGE_TAG" --namespace ${APP_NAME}-dev --kubeconfig "$KUBE_CONFIG"
   - kubectl wait --for=condition=Ready pods --timeout=600s --all --namespace ${APP_NAME}-dev --kubeconfig "$KUBE_CONFIG"
   - kubectl apply -f ./src/e2e/dep-subst.yaml -n ${APP_NAME}-dev --kubeconfig "$KUBE_CONFIG"
   - kubectl wait --for=condition=Ready --timeout=600s pods job/zeno-finance-e2e-job --namespace ${APP_NAME}-dev --kubeconfig "$KUBE_CONFIG"
   - kubectl logs -f job/zeno-finance-e2e-job -n zeno-finance-dev --kubeconfig "$KUBE_CONFIG"
   - kubectl wait --for=condition=Complete --timeout=5s job/zeno-finance-e2e-job -n ${APP_NAME}-dev --kubeconfig "$KUBE_CONFIG"

deploy to production:
  stage: deploy
  image:
    name: alpine/helm:3.2.1
    entrypoint: [""]
  needs:
    - job: "publish web"
      optional: true
    - job: "publish bff"
      optional: true
    - job: "publish api"
      optional: true
    - job: "publish e2e"
      optional: true
    - job: "end to end tests"
      optional: true
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
  script:
    - helm version
    - helm upgrade ${APP_NAME} ./charts --install --atomic --namespace ${APP_NAME} --kubeconfig "$KUBE_CONFIG"
  environment:
    name: "$ENV_NAME"
    url: "$ENV_ADDRESS"
