variables:
  GIT_STRATEGY: clone
  GIT_SUBMODULE_STRATEGY: recursive
  APP_NAME: zeno-finance
  IMAGE_TAG: latest

stages:
  - configure
  - build
  - test
  - package
  - deploy

configure tags:
  stage: configure
  image: python:3
  rules:
    - when: always
  artifacts:
    expire_in: "1h"
    paths:
      - variables
    when: always
  script:
    - pip install requests
    - WEB_HASH=$(python3 ./cicd/Image/determinetagfrompath.py -m ./web/ -m ./shared/ -m ./common/)
    - BFF_HASH=$(python3 ./cicd/Image/determinetagfrompath.py -m ./bff/ -m ./shared/ -m ./common/)
    - API_HASH=$(python3 ./cicd/Image/determinetagfrompath.py -m ./api/ -m ./shared/ -m ./common/)
    - E2E_HASH=$(python3 ./cicd/Image/determinetagfrompath.py -m ./e2e/ -m ./shared/ -m ./common/)
    - WEB_BUILD=$(python3 ./cicd/Image/determinetagpresent.py --branch "${CI_COMMIT_BRANCH}" --imagetag "${WEB_HASH}" --imagename zeno-finance-web --crusername "${CR_USERNAME}")
    - BFF_BUILD=$(python3 ./cicd/Image/determinetagpresent.py --branch "${CI_COMMIT_BRANCH}" --imagetag "${BFF_HASH}" --imagename zeno-finance-bff --crusername "${CR_USERNAME}")
    - API_BUILD=$(python3 ./cicd/Image/determinetagpresent.py --branch "${CI_COMMIT_BRANCH}" --imagetag "${API_HASH}" --imagename zeno-finance-api --crusername "${CR_USERNAME}")
    - E2E_BUILD=$(python3 ./cicd/Image/determinetagpresent.py --branch "${CI_COMMIT_BRANCH}" --imagetag "${E2E_HASH}" --imagename zeno-finance-e2e --crusername "${CR_USERNAME}")
    - mkdir -p variables
    - echo $WEB_HASH >> variables/web_image_tag
    - echo $BFF_HASH >> variables/bff_image_tag
    - echo $API_HASH >> variables/api_image_tag
    - echo $E2E_HASH >> variables/e2e_image_tag
    - echo $WEB_BUILD >> variables/web_image_build
    - echo $BFF_BUILD >> variables/bff_image_build
    - echo $API_BUILD >> variables/api_image_build
    - echo $E2E_BUILD >> variables/e2e_image_build
    - cat variables/web_image_tag
    - cat variables/bff_image_tag
    - cat variables/api_image_tag
    - cat variables/e2e_image_tag
    - cat variables/web_image_build
    - cat variables/bff_image_build
    - cat variables/api_image_build
    - cat variables/e2e_image_build

build:
  stage: build
  image: mcr.microsoft.com/dotnet/sdk:6.0
  script:
    - cd src
    - dotnet restore
    - dotnet build
    - dotnet test --filter "TestCategory!=UI&TestCategory!=Integration" --test-adapter-path:. --collect:"XPlat Code Coverage" --results-directory:"artifacts" --logger:"junit;LogFilePath=..\artifacts\{assembly}-test-result.xml;MethodFormat=Class;FailureBodyFormat=Verbose"
  artifacts:
    when: always
    reports:
      cobertura:
       - ./**/coverage.cobertura.xml
      junit: 
       - ./**/*test-result.xml
       
publish api:
  stage: package
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  needs:
    - job: "build"
      optional: true
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      when: always
    - when: never
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CR_REGISTRY\":{\"auth\":\"$(echo -n ${CR_USERNAME}:${CR_PASSWORD} | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context ./src/ --dockerfile ./api.Dockerfile --destination "$CR_USERNAME"/zeno-finance-api

publish bff:
  stage: package
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  needs:
    - job: "build"
      optional: true
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      when: always
    - when: never
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CR_REGISTRY\":{\"auth\":\"$(echo -n ${CR_USERNAME}:${CR_PASSWORD} | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context ./src/ --dockerfile ./bff.Dockerfile --destination "$CR_USERNAME"/zeno-finance-bff

publish web:
  stage: package
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  needs:
    - job: "build"
      optional: true
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      when: always
    - when: never
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CR_REGISTRY\":{\"auth\":\"$(echo -n ${CR_USERNAME}:${CR_PASSWORD} | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context ./src/ --dockerfile ./web.Dockerfile --destination "$CR_USERNAME"/zeno-finance-web

publish e2e:
  stage: package
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  needs:
    - job: "build"
      optional: true
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      when: always
    - when: never
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CR_REGISTRY\":{\"auth\":\"$(echo -n ${CR_USERNAME}:${CR_PASSWORD} | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context ./src/ --dockerfile ./e2e.Dockerfile --destination "$CR_USERNAME"/zeno-finance-e2e

#deploy to production:
#  stage: deploy
#  image:
#    name: alpine/helm:3.2.1
#    entrypoint: [""] 
#  needs: 
#    - job: "publish web"
#      optional: true
#    - job: "publish bff"
#      optional: true
#    - job: "publish api"
#      optional: true
#    - job: "end to end tests"
#      optional: false
#  rules:
#    - if: '$CI_COMMIT_BRANCH == "main"'
#  script:
#    - helm version
#    - helm upgrade ${APP_NAME} ./charts --install --atomic --namespace ${APP_NAME} --kubeconfig "$KUBE_CONFIG"
#  environment:
#    name: "$ENV_NAME"
#    url: "$ENV_ADDRESS"