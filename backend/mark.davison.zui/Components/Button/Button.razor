@inherits Component

<button class="z-btn @_buttonVariantCss @_buttonTypeCss @_iconOnlyCss" disabled="@Disabled">
    <div class="container">
        @if (Progress)
        {
            <Loading Type="LoadingType.CircularInfinite" />
        }
        else if (IconStyle == foundations.Core.IconStyle.IconLeft ||
            IconStyle == foundations.Core.IconStyle.IconOnly)
        {
            <Icon IconType="@Icon" Size="inherit" />
        }
        @if (IconStyle != foundations.Core.IconStyle.IconOnly)
        {
            @Label
        }
        @if (IconStyle == foundations.Core.IconStyle.IconRight)
        {
            <Icon IconType="@Icon" Size="inherit" />  
        }
    </div>
</button>

@code {
        
    private string _buttonVariantCss => $"z-btn-{Variant.ToString().ToLowerInvariant()}";
    private string _buttonTypeCss => $"z-btn-{Type.ToString().ToLowerInvariant()}";
    private string _iconOnlyCss => IconStyle == foundations.Core.IconStyle.IconOnly 
        ? "z-circular" 
        : string.Empty;

    [Parameter]
    public string? Label { get; set; }

    [Parameter]
    public IconStyle? IconStyle { get; set; }

    [Parameter]
    public ButtonType Type { get; set; } = ButtonType.Secondary;

    [Parameter]
    public ButtonVariant Variant { get; set; } = ButtonVariant.Text;

    [Parameter]
    public bool Disabled { get; set; }

    [Parameter]
    public bool Progress { get; set; }

    [Parameter]
    public string? Icon { get; set; }

}