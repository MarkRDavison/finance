@typeparam TKey
@typeparam TRow where TRow : class, ITableRow<TKey>

<table class="z-table">
    <TableHeader
        TRow="TRow"
        TKey="TKey"
        ColumnDefinitions="@ColumnDefinitions" />
    <TableBody
        TRow="TRow"
        TKey="TKey"
        ColumnDefinitions="@ColumnDefinitions"
        Rows="@Rows"
        PageIndex="@PageIndex"
        PageSize="@PageSize"
        PagingEnabled="@PagingEnabled" />
    <TableFooter
        PageIndex="@PageIndex"
        PageIndexChanged="@OnPageIndexChanged"
        PageSize="@PageSize"
        PagingEnabled="@PagingEnabled"
        RowCount="@Rows.Count()"/>
</table>

@code {

    [Parameter, EditorRequired]
    public IEnumerable<TableColumDefinition<TRow>> ColumnDefinitions { get; set; } = Enumerable.Empty<TableColumDefinition<TRow>>();

    [Parameter, EditorRequired]
    public IEnumerable<TRow> Rows { get; set; } = Enumerable.Empty<TRow>();

    [Parameter]
    public int PageSize { get; set; } = 10;

    [Parameter]
    public int PageIndex { get; set; }

    [Parameter]
    public EventCallback<int> PageIndexChanged { get; set; }

    private void OnPageIndexChanged(int index)
    {
        PageIndex = index;
        PageIndexChanged.InvokeAsync(index);
    }

    [Parameter]
    public bool PagingEnabled { get; set; }

}
