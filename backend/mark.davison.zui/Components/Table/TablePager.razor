<tr>
    <td colspan="100">
        <div class="z-table-pager">
            @* TODO: Disable these buttons plz *@
            <Button
                Type="ButtonType.Secondary"
                IconStyle="IconStyle.IconOnly"
                Icon="chevron-bar-left"
                OnClick="@SetStart"
                Disabled="@_leftDisabled" />
            <Button
                Type="ButtonType.Secondary"
                IconStyle="IconStyle.IconOnly"
                Icon="chevron-left"
                OnClick="@SetPrev"
                Disabled="@_leftDisabled" />
            <div>@_positionText</div>
            <Button
                Type="ButtonType.Secondary"
                IconStyle="IconStyle.IconOnly"
                Icon="chevron-right"
                OnClick="@SetNext"
                Disabled="@_rightDisabled" />
            <Button
                Type="ButtonType.Secondary"
                IconStyle="IconStyle.IconOnly"
                Icon="chevron-bar-right"
                OnClick="@SetEnd"
                Disabled="@_rightDisabled" />
        </div>
    </td>
</tr>

@code {

    private string _positionText => $"{_currentPageNumber} of {_maxPageNumber} pages";
    private int _currentPageNumber;
    private int _maxPageNumber;
    private bool _leftDisabled;
    private bool _rightDisabled;

    [Parameter]
    public int PageSize { get; set; }

    [Parameter]
    public int PageIndex { get; set; }

    [Parameter]
    public int RowCount { get; set; }

    [Parameter]
    public EventCallback<int> PageIndexChanged { get; set; }

    [Parameter]
    public bool PagingEnabled { get; set; }

    private void UpdateButtonDisabled()
    {
        _leftDisabled = PageIndex <= 1;
        _rightDisabled = PageIndex + 1 >= _maxPageNumber;
    }

    protected override void OnParametersSet()
    {
        _currentPageNumber = PageIndex + 1;
        _maxPageNumber = Math.Max(1, (int)Math.Ceiling((decimal)RowCount / (decimal)PageSize));
        UpdateButtonDisabled();

        base.OnParametersSet();
    }

    private async Task SetPageIndex(int value)
    {
        if (value >= 0 && value < _maxPageNumber)
        {
            _currentPageNumber = value + 1;
            PageIndex = value;
            UpdateButtonDisabled();
            await PageIndexChanged.InvokeAsync(value);
        }
    }
    private async Task SetStart()
    {
        await SetPageIndex(0);
    }
    private async Task SetPrev()
    {
        await SetPageIndex(PageIndex-1);
    }
    private async Task SetNext()
    {
        await SetPageIndex(PageIndex+1);   
    }
    private async Task SetEnd()
    {
        await SetPageIndex(_maxPageNumber - 1);   
    }

}
