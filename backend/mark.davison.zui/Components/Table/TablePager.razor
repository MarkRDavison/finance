<tr>
    <td colspan="100">
        <div class="z-table-pager">
            <Button Type="ButtonType.Secondary" IconStyle="IconStyle.IconOnly" Icon="chevron-bar-left" OnClick="@SetStart" />
            <Button Type="ButtonType.Secondary" IconStyle="IconStyle.IconOnly" Icon="chevron-left" OnClick="@SetPrev" />
            <div>@_positionText</div>
            <Button Type="ButtonType.Secondary" IconStyle="IconStyle.IconOnly" Icon="chevron-right" OnClick="@SetNext" />
            <Button Type="ButtonType.Secondary" IconStyle="IconStyle.IconOnly" Icon="chevron-bar-right" OnClick="@SetEnd" />
        </div>
    </td>
</tr>

@code {
    private string _positionText => $"{_currentPageNumber} of {_maxPageNumber} pages";
    private int _currentPageNumber;
    private int _maxPageNumber;

    [Parameter]
    public int PageSize { get; set; }

    [Parameter]
    public int PageIndex { get; set; }

    [Parameter]
    public int RowCount { get; set; }

    [Parameter]
    public EventCallback<int> PageIndexChanged { get; set; }

    [Parameter]
    public bool PagingEnabled { get; set; }

    protected override void OnParametersSet()
    {
        _currentPageNumber = PageIndex + 1;
        _maxPageNumber = (int)Math.Ceiling((decimal)RowCount / (decimal)PageSize);

        base.OnParametersSet();
    }

    private async Task SetPageIndex(int value)
    {
        if (value >= 0 && value < _maxPageNumber)
        {
            _currentPageNumber = value + 1;
            PageIndex = value;
            await PageIndexChanged.InvokeAsync(value);
        }
    }
    private async Task SetStart()
    {
        await SetPageIndex(0);
    }
    private async Task SetPrev()
    {
        await SetPageIndex(PageIndex-1);
    }
    private async Task SetNext()
    {
        await SetPageIndex(PageIndex+1);   
    }
    private async Task SetEnd()
    {
        await SetPageIndex(_maxPageNumber - 1);   
    }

}
